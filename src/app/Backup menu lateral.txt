<p-sidebar #sidebarRef [(visible)]="sidebarVisible">
  <ng-template pTemplate="headless">
    <div class="flex flex-column h-full sidebar">
      <div
        class="flex align-items-center justify-content-between px-4 pt-3 flex-shrink-0"
      >
        <span class="inline-flex align-items-center gap-2">
          <img src="images\Logo_veterinarias_1.png" width="250" />
        </span>
        <span>
          <p-button
            type="button"
            (onClick)="closeCallback()"
            icon="pi pi-times"
            rounded="true"
            outlined="true"
            styleClass="h-2rem w-2rem"
          ></p-button>
        </span>
      </div>
      <div class="overflow-y-auto">
        <ul class="list-none p-3 m-0">
          <li>
            <div
              pRipple
              pStyleClass="@next"
              enterClass="hidden"
              enterActiveClass="slidedown"
              leaveToClass="hidden"
              leaveActiveClass="slideup"
              class="p-3 flex align-items-center justify-content-between text-600 cursor-pointer p-ripple"
            >
              <span class="font-bold">CÁTEDRAS</span>
            </div>

            <ul class="list-none p-0 m-0 overflow-hidden">
              <li>
                <a
                  pRipple
                  class="flex align-items-center cursor-pointer p-3 border-round text-700 hover:surface-100 transition-duration-150 transition-colors p-ripple"
                >
                  <i class="pi pi-home mr-2"></i>
                  <span class="font-bold mr-2">Primer Año</span>
                  <i
                    *ngIf="!expandPrimero"
                    style="margin-left: auto"
                    class="pi pi-chevron-down"
                    (click)="expandPrimero = true"
                  ></i>
                  <i
                    *ngIf="expandPrimero"
                    style="margin-left: auto"
                    class="pi pi-chevron-up"
                    (click)="expandPrimero = false"
                  ></i>
                </a>
                <ul
                  *ngIf="expandPrimero"
                  class="list-none p-0 ml-3 overflow-hidden"
                >
                  <li *ngFor="let catedraPrimero of catedrasPrimero">
                    <a
                      pRipple
                      class="flex align-items-center cursor-pointer p-3 border-round text-700 hover:surface-100 transition-duration-150 transition-colors p-ripple"
                      (click)="expandPrimero = false"
                      >{{ catedraPrimero }}
                    </a>
                  </li>
                </ul>
              </li>
              <li>
                <a
                  pRipple
                  class="flex align-items-center cursor-pointer p-3 border-round text-700 hover:surface-100 transition-duration-150 transition-colors p-ripple"
                >
                  <i class="pi pi-bookmark mr-2"></i>
                  <span class="font-bold mr-2">Segundo Año</span>
                  <i style="margin-left: auto" class="pi pi-chevron-down"></i>
                </a>
              </li>
              <li>
                <a
                  pRipple
                  class="flex align-items-center cursor-pointer p-3 border-round text-700 hover:surface-100 transition-duration-150 transition-colors p-ripple"
                >
                  <i class="pi pi-bookmark mr-2"></i>
                  <span class="font-bold mr-2">Tercer Año</span>
                  <i style="margin-left: auto" class="pi pi-chevron-down"></i>
                </a>
              </li>
              <li>
                <a
                  pRipple
                  class="flex align-items-center cursor-pointer p-3 border-round text-700 hover:surface-100 transition-duration-150 transition-colors p-ripple"
                >
                  <i class="pi pi-bookmark mr-2"></i>
                  <span class="font-bold mr-2">Cuarto Año</span>
                  <i style="margin-left: auto" class="pi pi-chevron-down"></i>
                </a>
              </li>
              <li>
                <a
                  pRipple
                  class="flex align-items-center cursor-pointer p-3 border-round text-700 hover:surface-100 transition-duration-150 transition-colors p-ripple"
                >
                  <i class="pi pi-crown mr-2"></i>
                  <span class="font-bold mr-2">Quinto Año</span>
                  <i style="margin-left: auto" class="pi pi-chevron-down"></i>
                </a>
              </li>
            </ul>
          </li>
        </ul>
      </div>
      <div class="mt-auto">
        <hr class="mb-3 mx-3 border-top-1 border-none surface-border" />
        <a
          pRipple
          class="m-3 flex align-items-center cursor-pointer p-3 gap-2 border-round text-700 hover:surface-100 transition-duration-150 transition-colors p-ripple"
        >
          <!-- <p-avatar image="https://primefaces.org/cdn/primeng/images/demo/avatar/amyelsner.png" shape="circle" /> -->
          <span class="font-bold">Aprende Vet</span>
        </a>
      </div>
    </div>
  </ng-template>
</p-sidebar>





TS*************

expandPrimero: boolean = false;
  expandSegundo: boolean = false;
  expandTercero: boolean = false;
  expandCuarto: boolean = false;
  expandQuinto: boolean = false;

  catedrasPrimero: string[] = ['Cátedra 1', 'Cátedra 2', 'Cátedra 3'];
  catedrasSegundo: string[] = ['Cátedra 1', 'Cátedra 2', 'Cátedra 3']

  private authService = inject(AuthService);
  private router = inject(Router);

  items: MenuItem[] | undefined;
  sidebarVisible: boolean = false;

  closeCallback(): void {
    this.sidebarVisible = false;
    this.expandPrimero = false;
    this.expandSegundo = false;
    this.expandTercero = false;
    this.expandCuarto = false;
    this.expandQuinto = false;
}

  ngOnInit() {
    this.items = [
        {
            label: 'Ejercicios',
            icon: 'pi pi-pencil',
            command: () => this.sidebarVisible = !this.sidebarVisible
        },
        {
            label: 'Trabajos Futuros',
            icon: 'pi pi-search',
            items: [
                {
                    label: 'Components',
                    icon: 'pi pi-bolt'
                },
                {
                    label: 'Blocks',
                    icon: 'pi pi-server'
                },
                {
                    label: 'UI Kit',
                    icon: 'pi pi-pencil'
                },
                {
                    label: 'Templates',
                    icon: 'pi pi-palette',
                    items: [
                        {
                            label: 'Apollo',
                            icon: 'pi pi-palette'
                        },
                        {
                            label: 'Ultima',
                            icon: 'pi pi-palette'
                        }
                    ]
                }
            ]
        },
        {
            label: 'Login',
            icon: 'pi pi-user'
        }
    ]
}

  //Evaluar si dejar esto o no, creo que no le veo utilidad la verdad
  //Está fallando después del logout
  public finishedAuthCheck = computed<boolean>(() => {
    if(this.authService.authStatus() === AuthStatus.Checking){
      return true;
    }

    return true;
  });
